FamstackQueryStringsusersByUserId=from UserItem where userId = :id
getUserActivityByDate=from UserActivityItem where userItem.id = :userId and calenderDate > :calenderDateStart and calenderDate <= :calenderDateEnd
deleteAllUserTaskItemsByTaskId=delete from UserTaskActivityItem where taskId =:taskId
userTaskActivityItemByTaskId=from UserTaskActivityItem where taskId =:taskId
getGroupMessages=from GroupMessageItem gmi where gmi.groupItem.groupId =:groupId and gmi.createdDate > :date
getMessagesAfterId=from GroupMessageItem gmi where gmi.groupItem.groupId =:groupId and gmi.messageId > :messageId and gmi.createdDate > :date
allUserActivityItemsFromToday=from UserActivityItem where calenderDate > :calenderDateStart
allUserActivityItemsFromDatetoDate=from UserActivityItem where calenderDate > :calenderDateStart and calenderDate < :calenderDateEnd
userActivityItemsFromDatetoDate=from UserActivityItem where calenderDate > :calenderDateStart and calenderDate < :calenderDateEnd and userItem.id=:userId
getUserActivities=from UserActivityItem where userItem.id = :userId and calenderDate >:startTime
getAllUserActivities=from UserActivityItem where calenderDate >:startTime
getBackLogUserActivities=from UserActivityItem where userItem.id = :userId and calenderDate >:startTime and calenderDate <:endTime
getAllBackLogUserActivities=from UserActivityItem where calenderDate >:startTime and calenderDate <:endTime
getProjectItemsByStatus=from ProjectItem where status=:status and completionTime >:startTime
getMissedTimeLineProjectItems=from ProjectItem where status !=:status and completionTime <=:completionDate and completionTime <:startTime
getAllProjectItems=from ProjectItem where completionTime >:startTime
getProjectItemsByCode=from ProjectItem where code=:code and projectId!=:projectId
searchForProjectNames=from ProjectItem e where lower(e.name) like lower(:name)
getProjectItemCountByStatus=SELECT COUNT(e) FROM ProjectItem e where status=:status and completionTime >:startTime
getMissedTimeLineProjectItemCountByStatus=SELECT COUNT(e) FROM ProjectItem e where status!=:status and completionTime <=:completionDate and completionTime >:startTime
searchForProjectsForRepoting=FROM ProjectItem e where startTime >=:startDate and startTime <=:endDate
searchForProjectsWithIn=FROM ProjectItem where startTime >=:startDate and startTime <=:startDate2 and status != 'COMPLETED' and status != 'INPROGRESS'
searchForProjectsEndWithIn=FROM ProjectItem where completionTime >=:endDate and completionTime <=:endDate2  and status != 'COMPLETED'
getAllProjectTaskStartWithIn=FROM TaskItem where startTime >=:startTime and startTime <=:startTime2 and status != 'COMPLETED' and status != 'INPROGRESS'
getAllProjectTaskByProjectId=FROM TaskItem where projectItem.projectId=:projectId
getAllProjectInprogressTask=FROM TaskItem where status = :taskStatus
getAllProjectTaskEndWithIn=FROM TaskItem where completionTime >=:endDate and completionTime <=:endDate2 and status != 'COMPLETED'
getAllProjectTaskMissedDeadLine=FROM TaskItem where completionTime <=:currentTime and completionTime >:startTime and status != 'COMPLETED'
userBillableProductiveHoursSQL=select COUNT(Id) as count, id as userId, sum(billable_hours) as billableHours, sum(productive_hours) as productiveHours from user_activity_info where calender_date >:calenderDateStart and calender_date <:calenderDateEnd %s group by id
projectItemByTypeCountSQL=select type, count(project_id) from project_info where completion_time >:startTime %s group by type
teamUtilizationSQL =select team_id,count(*) total, sum(case when type = 'BILLABLE' then 1 else 0 end) billable, sum(case when type = 'NON_BILLABLE' then 1 else 0 end) nonbillable from project_info where completion_time >:startTime %s group by team_id
projectCategorySQL=select category, count(project_id) from project_info where completion_time >:startTime  %s group by category
clientProjectStatusSQL =select account_id,count(*) total, sum(case when status = 'COMPLETED' then 1 else 0 end) completed, sum(case when status != 'COMPLETED' then 1 else 0 end) notcompleted from project_info where completion_time >:startTime %s group by account_id
getPrimaryProjectsItems=FROM ProjectItem item WHERE projectId IN (select max(projectItem.projectId) from ProjectItem projectItem group by projectItem.code) and completionTime >:startTime
#SELECT project_id, name, created_date, completion_time, code, status FROM project_info WHERE project_id IN (SELECT MAX(project_id) FROM project_info GROUP BY code) and completion_time >:startTime